<UserControl x:Class="MVVMChatClient.PrivateChat"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MVVMChatClient"
             mc:Ignorable="d" 
             d:DesignHeight="750" d:DesignWidth="1000">

    <UserControl.Resources>
        <Style x:Key="MessageTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="#5cb863" BorderThickness="2" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UserControl.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation
                        Storyboard.TargetName="sideWall"
                        Storyboard.TargetProperty="(local:UserSideWall.Opacity)" 
                        From="0.3" To="1" Duration="0:0:0.2" >
                    </DoubleAnimation>
                    <DoubleAnimation
                        Storyboard.TargetName="goBack"
                        Storyboard.TargetProperty="(local:UserSideWall.Opacity)" 
                        From="0.3" To="1" Duration="0:0:0.2" >
                    </DoubleAnimation>
                    <DoubleAnimation
                        Storyboard.TargetName="send"
                        Storyboard.TargetProperty="(local:UserSideWall.Opacity)" 
                        From="0.3" To="1" Duration="0:0:0.2" >
                    </DoubleAnimation>

                    <DoubleAnimation
                        Storyboard.TargetName="messageList"
                        Storyboard.TargetProperty="(local:UserSideWall.Opacity)" 
                        From="0.3" To="1" Duration="0:0:0.2" >
                    </DoubleAnimation>
                    <DoubleAnimation
                        Storyboard.TargetName="stackPanel"
                        Storyboard.TargetProperty="(local:UserSideWall.Opacity)" 
                        From="0.3" To="1" Duration="0:0:0.2" >
                    </DoubleAnimation>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="sideWall">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1000"/>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="goBack">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1000"/>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="send">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1000"/>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="messageList">
                        <EasingDoubleKeyFrame KeyTime="0" Value="-1000"/>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="stackPanel">
                        <EasingDoubleKeyFrame KeyTime="0" Value="-1000"/>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>

    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="pack://application:,,,/MVVMChatClient;component/View/Images/50194b7860774d22f17c0bb2518f3bcd.png"/>
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="10"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="5"/>
        </Grid.ColumnDefinitions>


        <local:MessageListContainer x:Name="messageList" VerticalAlignment="Bottom"
                                    Grid.Row="1" Grid.RowSpan="9"
                           Grid.Column="1" Grid.ColumnSpan="9">

            <local:MessageListContainer.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </local:MessageListContainer.RenderTransform>

        </local:MessageListContainer>

        <local:UserSideWall x:Name="sideWall" Grid.Column="11" Grid.ColumnSpan="4"
                            Grid.Row="1" Grid.RowSpan="3">

            <local:UserSideWall.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </local:UserSideWall.RenderTransform>

        </local:UserSideWall>

        <StackPanel x:Name="stackPanel" VerticalAlignment="Bottom"
                    Margin="0 0 0 10"
                    Grid.Column="1"
                    Grid.Row="7"
                    Grid.RowSpan="5"
                    Grid.ColumnSpan="9">

            <StackPanel.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </StackPanel.RenderTransform>

            <TextBox x:Name="message"           
                 FontSize="20" 
                 TextWrapping="Wrap"
                 Text="{Binding SendText,
                Mode = TwoWay,
                UpdateSourceTrigger=PropertyChanged}"
                    Style="{DynamicResource MessageTextBoxStyle}" >
            </TextBox>

        </StackPanel>

        <Button x:Name="goBack" Grid.Column="11" Grid.Row="5"
                Grid.ColumnSpan="4"
                Foreground="WhiteSmoke"
                FontSize="29"
                FontWeight="SemiBold"
                Command="{Binding _GoBack}"
                Style="{StaticResource GoBackButton }">

            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>

            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                        Storyboard.TargetName="sideWall"
                        Storyboard.TargetProperty="(local:UserSideWall.Opacity)" 
                        From="1" To="0" Duration="0:0:0.2" >
                            </DoubleAnimation>
                            <DoubleAnimation
                        Storyboard.TargetName="goBack"
                        Storyboard.TargetProperty="(local:UserSideWall.Opacity)" 
                        From="1" To="0" Duration="0:0:0.2" >
                            </DoubleAnimation>
                            <DoubleAnimation
                        Storyboard.TargetName="send"
                        Storyboard.TargetProperty="(local:UserSideWall.Opacity)" 
                        From="1" To="0" Duration="0:0:0.2" >
                            </DoubleAnimation>

                            <DoubleAnimation
                        Storyboard.TargetName="messageList"
                        Storyboard.TargetProperty="(local:UserSideWall.Opacity)" 
                        From="1" To="0" Duration="0:0:0.2" >
                            </DoubleAnimation>
                            <DoubleAnimation
                        Storyboard.TargetName="stackPanel"
                        Storyboard.TargetProperty="(local:UserSideWall.Opacity)" 
                        From="1" To="0" Duration="0:0:0.2" >
                            </DoubleAnimation>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="sideWall">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1000"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="goBack">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1000"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="send">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1000"/>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="messageList">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-1000"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="stackPanel">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-1000"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>


            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Go Back"
                           VerticalAlignment="Center"
                           Padding="0 0 10 0"/>
                <TextBlock FontFamily="Segoe MDL2 Assets"
                           Text="&#xE761;"
                           VerticalAlignment="Center"/>
            </StackPanel>

        </Button>

        <Button x:Name="send"
                IsDefault="True"
                IsEnabled="{Binding ElementName=message, Path=Text.Length}"
                Grid.Row="11"
                Grid.Column="11" Grid.ColumnSpan="4"
                Content="Send"
                FontWeight="Black"
                VerticalContentAlignment="Center"
                FontSize="15"                
                Height="30"
                Width="110"
                Style="{DynamicResource ButtonStyle1}" Command="{Binding _SendCommand}"
                >

            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>

        </Button>

    </Grid>
</UserControl>
